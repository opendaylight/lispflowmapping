{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_7b613f04",
        "filename": "mappingservice/lisp-proto/src/test/java/org/opendaylight/lispflowmapping/lisp/util/LispAddressUtilTest.java",
        "patchSetId": 1
      },
      "lineNbr": 814,
      "author": {
        "id": 1966
      },
      "writtenOn": "2016-03-03T18:03:52Z",
      "side": 1,
      "message": "Interesting approach to testing this :) \n\nTypically, this should not happen in practice, i.e., src and dst should be the same address family. Since we\u0027re not enforcing this, I guess the test is fine.",
      "range": {
        "startLine": 813,
        "startChar": 8,
        "endLine": 814,
        "endChar": 104
      },
      "revId": "6ad254b362f81056c269b792dfa6449bdd3e63f1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_bb574725",
        "filename": "mappingservice/lisp-proto/src/test/java/org/opendaylight/lispflowmapping/lisp/util/LispAddressUtilTest.java",
        "patchSetId": 1
      },
      "lineNbr": 854,
      "author": {
        "id": 1966
      },
      "writtenOn": "2016-03-03T18:03:52Z",
      "side": 1,
      "message": "Isn\u0027t the second assert is sufficient?",
      "range": {
        "startLine": 853,
        "startChar": 0,
        "endLine": 854,
        "endChar": 54
      },
      "revId": "6ad254b362f81056c269b792dfa6449bdd3e63f1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_9b524333",
        "filename": "mappingservice/lisp-proto/src/test/java/org/opendaylight/lispflowmapping/lisp/util/LispAddressUtilTest.java",
        "patchSetId": 1
      },
      "lineNbr": 863,
      "author": {
        "id": 1966
      },
      "writtenOn": "2016-03-03T18:03:52Z",
      "side": 1,
      "message": "This should be \"doesn\u0027t contain hop .. which was ..\", no?",
      "range": {
        "startLine": 863,
        "startChar": 24,
        "endLine": 863,
        "endChar": 56
      },
      "revId": "6ad254b362f81056c269b792dfa6449bdd3e63f1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_fb342ffd",
        "filename": "mappingservice/lisp-proto/src/test/java/org/opendaylight/lispflowmapping/lisp/util/LispAddressUtilTest.java",
        "patchSetId": 1
      },
      "lineNbr": 887,
      "author": {
        "id": 1966
      },
      "writtenOn": "2016-03-03T18:03:52Z",
      "side": 1,
      "message": "\"Rloc .. should be part of rloc list\"",
      "range": {
        "startLine": 887,
        "startChar": 23,
        "endLine": 887,
        "endChar": 94
      },
      "revId": "6ad254b362f81056c269b792dfa6449bdd3e63f1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_9b7b63bd",
        "filename": "mappingservice/lisp-proto/src/test/java/org/opendaylight/lispflowmapping/lisp/util/LispAddressUtilTest.java",
        "patchSetId": 1
      },
      "lineNbr": 970,
      "author": {
        "id": 1966
      },
      "writtenOn": "2016-03-03T18:03:52Z",
      "side": 1,
      "message": "Do we need to import mockito just for this? If that\u0027s the case, I\u0027d rather remove the dependency and replace the second address with an un-mocked address.",
      "range": {
        "startLine": 970,
        "startChar": 8,
        "endLine": 970,
        "endChar": 64
      },
      "revId": "6ad254b362f81056c269b792dfa6449bdd3e63f1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_fb4d4f9b",
        "filename": "mappingservice/lisp-proto/src/test/java/org/opendaylight/lispflowmapping/lisp/util/LispAddressUtilTest.java",
        "patchSetId": 1
      },
      "lineNbr": 971,
      "author": {
        "id": 1966
      },
      "writtenOn": "2016-03-03T18:03:52Z",
      "side": 1,
      "message": "s/comparation/comparison/g",
      "range": {
        "startLine": 971,
        "startChar": 8,
        "endLine": 971,
        "endChar": 25
      },
      "revId": "6ad254b362f81056c269b792dfa6449bdd3e63f1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}