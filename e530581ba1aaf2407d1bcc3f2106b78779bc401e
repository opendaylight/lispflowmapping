{
  "comments": [
    {
      "key": {
        "uuid": "da6255ed_85419f0d",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/type/lisp/EidToLocatorRecord.java",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "All this hybrid of NB model and core model in the same class, seems \"dirty\". Can\u0027t we do a complete separation of the classes and use some converter classes for conversion purposes?",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_0555afc5",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/type/lisp/address/LispAddressGeneric.java",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "Not sure: maybe the default here should throw exception?",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_65b58bcc",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/type/lisp/address/LispAddressGeneric.java",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 879
      },
      "writtenOn": "2013-10-18T03:25:15Z",
      "side": 1,
      "message": "Indeed. Exception added.",
      "parentUuid": "da6255ed_0555afc5",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_e5517bd9",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/type/lisp/address/LispAddressGeneric.java",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "refactor long cases to more methods",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_6546ab25",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/type/lisp/address/LispAddressGeneric.java",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "You should abstract your model and conversion logic to 2 classes. All the convert methods should reside in a Convertor/Transformer class.",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_2548b32c",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/type/lisp/address/LispAddressGeneric.java",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "It\u0027s only used in Maskable addresses, so here it\u0027s not used.",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_454ba72b",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/type/lisp/address/LispAddressGeneric.java",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "Refactor \"large\" logic to private methods.",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_e5ba9b09",
        "filename": "mappingservice/northbound/src/main/java/org/opendaylight/lispflowmapping/northbound/MapRegisterNB.java",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "You should abstract your model and conversion logic to 2 classes. All the convert methods should reside in a Convertor/Transformer class.",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_25c1d380",
        "filename": "mappingservice/northbound/src/main/java/org/opendaylight/lispflowmapping/northbound/NorthboundService.java",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "General question: Why do you query for a reference of INorthboundService? This class is the NorthboundService, so you are acquiring a reference to yourself? What am I missing here?",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_45ca8750",
        "filename": "mappingservice/northbound/src/main/java/org/opendaylight/lispflowmapping/northbound/NorthboundService.java",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 879
      },
      "writtenOn": "2013-10-18T03:25:15Z",
      "side": 1,
      "message": "Each time the REST API is called, a different instance of this class is created to serve the request. However the LISP DAO is only attached to the instance created as a service during bootup. This allows to retrieve that instance to make use of the LISP DAO",
      "parentUuid": "da6255ed_25c1d380",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_c55e77e9",
        "filename": "mappingservice/northbound/src/main/java/org/opendaylight/lispflowmapping/northbound/NorthboundService.java",
        "patchSetId": 3
      },
      "lineNbr": 199,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "Potential NPE",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_a56383b0",
        "filename": "mappingservice/northbound/src/main/java/org/opendaylight/lispflowmapping/northbound/NorthboundService.java",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "potential NPE",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_85587ffb",
        "filename": "mappingservice/northbound/src/main/java/org/opendaylight/lispflowmapping/northbound/NorthboundService.java",
        "patchSetId": 3
      },
      "lineNbr": 324,
      "author": {
        "id": 653
      },
      "writtenOn": "2013-10-17T13:48:09Z",
      "side": 1,
      "message": "0 is ok because it\u0027s not IMaskable currently",
      "revId": "e530581ba1aaf2407d1bcc3f2106b78779bc401e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}