{
  "comments": [
    {
      "key": {
        "uuid": "3a65312a_3392db57",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingService.java",
        "patchSetId": 8
      },
      "lineNbr": 182,
      "author": {
        "id": 654
      },
      "writtenOn": "2016-11-08T07:34:54Z",
      "side": 1,
      "message": "getXtrId() should be called on mapping itself. updating the variable name to mappingData or something of the like may make this more obvious.",
      "range": {
        "startLine": 182,
        "startChar": 16,
        "endLine": 182,
        "endChar": 46
      },
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_8ae4510e",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingService.java",
        "patchSetId": 8
      },
      "lineNbr": 182,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-11-08T16:32:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a65312a_3392db57",
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_ee0ebc33",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingSystem.java",
        "patchSetId": 8
      },
      "lineNbr": 119,
      "author": {
        "id": 654
      },
      "writtenOn": "2016-11-08T07:34:54Z",
      "side": 1,
      "message": "should be mapping.getXtrId()",
      "range": {
        "startLine": 119,
        "startChar": 26,
        "endLine": 119,
        "endChar": 57
      },
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_eac4e541",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingSystem.java",
        "patchSetId": 8
      },
      "lineNbr": 119,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-11-08T16:32:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a65312a_ee0ebc33",
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_b30a6bd0",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingSystem.java",
        "patchSetId": 8
      },
      "lineNbr": 143,
      "author": {
        "id": 654
      },
      "writtenOn": "2016-11-08T07:34:54Z",
      "side": 1,
      "message": "a refresh may change merged record value. I think that should be checked here.",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 143,
        "endChar": 82
      },
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_8a23b104",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingSystem.java",
        "patchSetId": 8
      },
      "lineNbr": 143,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-11-08T16:32:42Z",
      "side": 1,
      "message": "You\u0027re right, but we don\u0027t have enough information to know if merge is on for the particular Map-Register packet that triggered this method call. Should we add a \u0027boolean merge\u0027 to the parameters?",
      "parentUuid": "3a65312a_b30a6bd0",
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_53e79712",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingSystem.java",
        "patchSetId": 8
      },
      "lineNbr": 229,
      "author": {
        "id": 654
      },
      "writtenOn": "2016-11-08T07:34:54Z",
      "side": 1,
      "message": "I am wondering how is this realluy different from getSbMappingWithExpiration(src,dest)? this is not removing the entry form dsbe which is probably wrong, and if that is fixed these are pretty much duplicate functions. Unless I am missing something, should be merged into one single method.",
      "range": {
        "startLine": 216,
        "startChar": 1,
        "endLine": 229,
        "endChar": 9
      },
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_8af57185",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingSystem.java",
        "patchSetId": 8
      },
      "lineNbr": 229,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-11-08T16:32:42Z",
      "side": 1,
      "message": "Well, here we go through policy check, and if we would just remove getSbMappingWithExpiration() and use this instead, for null xtrIds we would enter an endless loop of function calls. But I factored out the common part, which, as you said, is almost all of this function.",
      "parentUuid": "3a65312a_53e79712",
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_33f65bd8",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingSystem.java",
        "patchSetId": 8
      },
      "lineNbr": 277,
      "author": {
        "id": 654
      },
      "writtenOn": "2016-11-08T07:34:54Z",
      "side": 1,
      "message": "should be smc.getMapping(dst,null) I think, since we know it is smc, using the IMapCache API on it seems misleading.",
      "range": {
        "startLine": 277,
        "startChar": 44,
        "endLine": 277,
        "endChar": 69
      },
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_6ab575ed",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/MappingSystem.java",
        "patchSetId": 8
      },
      "lineNbr": 277,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-11-08T16:32:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a65312a_33f65bd8",
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_73ee13ee",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/lisp/MapServer.java",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 654
      },
      "writtenOn": "2016-11-08T07:34:54Z",
      "side": 1,
      "message": "probably something like mapData or mappingValue is more readable. this applies everywhere else that MappingData is used. most places use mapping as variable name, some extMapping, and both are somewhat misleading.",
      "range": {
        "startLine": 121,
        "startChar": 24,
        "endLine": 121,
        "endChar": 34
      },
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_eac86576",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/lisp/MapServer.java",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-11-08T16:32:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a65312a_73ee13ee",
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_8e1d8869",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/util/MappingMergeUtil.java",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 654
      },
      "writtenOn": "2016-11-08T07:34:54Z",
      "side": 1,
      "message": "I think even this should be extendedRecord.getXtrId(). If we set the xTRId in MappingData, we should always use that, and avoid going inside the record for this.",
      "range": {
        "startLine": 176,
        "startChar": 36,
        "endLine": 176,
        "endChar": 53
      },
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_0a95e132",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/util/MappingMergeUtil.java",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-11-08T16:32:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a65312a_8e1d8869",
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_d3ba87e0",
        "filename": "mappingservice/inmemorydb/src/main/java/org/opendaylight/lispflowmapping/inmemorydb/HashMapDb.java",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 654
      },
      "writtenOn": "2016-11-08T07:34:54Z",
      "side": 1,
      "message": "A more descriptive name like lookupBestNode, or getBestNode is probably better.",
      "range": {
        "startLine": 74,
        "startChar": 39,
        "endLine": 74,
        "endChar": 46
      },
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_0e6e9801",
        "filename": "mappingservice/inmemorydb/src/main/java/org/opendaylight/lispflowmapping/inmemorydb/HashMapDb.java",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-11-08T08:33:04Z",
      "side": 1,
      "message": "Agree. Also, I moved out the inememorydb changes to a separate self-contained patch, since it\u0027s not strictly part of this one, it just happened that I discovered this unneeded expiration code while working on SimpleMapCache.",
      "parentUuid": "3a65312a_d3ba87e0",
      "revId": "737b883d67685bf62c8b0cc083709e007d3f4cb5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}