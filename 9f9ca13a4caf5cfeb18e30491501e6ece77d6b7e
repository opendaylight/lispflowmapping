{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_3dd65e28",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/interfaces/dao/SmrEvent.java",
        "patchSetId": 13
      },
      "lineNbr": 8,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "SMRs are LISP specific, so I would prefer this interface in the .lisp package.",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_5ddfda39",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/interfaces/lisp/IMapResolverAsync.java",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "setSmrNotificationListener(ISmrNotificationListener smrNotificationListener);",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_7ddc5646",
        "filename": "mappingservice/api/src/main/java/org/opendaylight/lispflowmapping/interfaces/lisp/ISmrNotify.java",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "I would probably rename this interface as ISmrNotificationListener, to follow the pattern of other classes in OpenDaylight.",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_9d233204",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/config/ConfigIni.java",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "I would rename smrRepetition to smrRetryCount everywhere.",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_ddfc8ab7",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/config/ConfigIni.java",
        "patchSetId": 13
      },
      "lineNbr": 253,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "Sonar complains about these literals, please add a constant at the top.",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_3d2f7e40",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/config/ConfigIni.java",
        "patchSetId": 13
      },
      "lineNbr": 276,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "Same as above.",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_1dd9e256",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/lisp/MapResolver.java",
        "patchSetId": 13
      },
      "lineNbr": 69,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "I think using a variable like smrNotificationListener would make the code clearer.",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_5d0eba8c",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/lisp/MapServer.java",
        "patchSetId": 13
      },
      "lineNbr": 316,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "I would use a more descriptive variable name here, like \u0027subscriberSmrFutureMap\u0027 :) Also, I know the executor is single threaded, but could there be a situation when we need support for multi-threading (and ConcurrentHashMap)?",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_4aed438e",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/lisp/MapServer.java",
        "patchSetId": 13
      },
      "lineNbr": 316,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-04T13:05:08Z",
      "side": 1,
      "message": "I guess we don\u0027t know in advance, but in general, you\u0027re right, it shouldn\u0027t be a problem to handle in a single thread. Let\u0027s just add a comment like \"Scheduling SMRs is done in a single thread. If a use case demands better performance, this may be revisited, and for multi-threading we will need ConcurrentHashMap here.\"",
      "parentUuid": "7a6b29fe_aa2177fe",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_7d0bb67c",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/lisp/MapServer.java",
        "patchSetId": 13
      },
      "lineNbr": 323,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "Can we move the lazy expiration here, so that we have a single loop and don\u0027t go through the subscribers twice?",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_bd28aee2",
        "filename": "mappingservice/implementation/src/main/java/org/opendaylight/lispflowmapping/implementation/lisp/MapServer.java",
        "patchSetId": 13
      },
      "lineNbr": 338,
      "author": {
        "id": 491
      },
      "writtenOn": "2016-10-02T19:54:05Z",
      "side": 1,
      "message": "I would add at the end \", ignoring\", so a debugging user know what action was taken in response to the event.",
      "revId": "9f9ca13a4caf5cfeb18e30491501e6ece77d6b7e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}